version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  airflow-init:
    image: apache/airflow:2.9.1
    depends_on:
      - postgres
    env_file: .env
    environment:
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    user: "${AIRFLOW_UID:-50000}:0"
    command: >
      bash -lc "airflow db init &&
      airflow users create --role Admin --username admin --password admin
      --firstname admin --lastname user --email admin@example.com || true"

  airflow-webserver:
    image: apache/airflow:2.9.1
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file: .env
    environment:
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
    command: ["airflow", "webserver"]
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    user: "${AIRFLOW_UID:-50000}:0"

  airflow-scheduler:
    image: apache/airflow:2.9.1
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file: .env
    command: ["airflow", "scheduler"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    user: "${AIRFLOW_UID:-50000}:0"

volumes:
  pgdata:
